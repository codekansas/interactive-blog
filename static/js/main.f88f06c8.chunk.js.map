{"version":3,"sources":["pages/About.react.js","components/posts/neuron_models/Model.react.js","components/posts/neuron_models/LeakyIntegrateAndFire.react.js","components/posts/neuron_models/Izhikevich.react.js","components/posts/neuron_models/HodgkinHuxley.react.js","posts/renderers/NeuronModels.react.js","posts/renderers/Torchscript.react.js","posts/PostMap.react.js","posts/PostRenderer.react.js","posts/PostRouter.react.js","App.react.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","role","aria-label","href","ModelRenderer","state","nearestValue","_this$props","this","props","params","model","dt","totalTime","targetParamKey","steps","initialParams","Map","map","p","key","value","Object","toConsumableArray","Array","keys","reduce","r","i","newParams","results","push","x","y","get","_this2","_this$props2","height","ylabel","data","runModel","es","onMouseLeave","setState","title","strokeStyle","onNearestX","v","values","titleFormat","concat","Math","round","itemsFormat","j","Component","Model","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","param","name","unit","stepValue","parseFloat","out_var","defaultTargetParamKey","_this$props3","_this$state","_params$find","find","e","lib_default","Model_react_ModelRenderer","Form","onSubmit","Row","Group","controlId","as","Col","md","Label","InputGroup","Control","type","placeholder","defaultValue","step","required","Append","Text","Button","renderModel","defaultProps","ModelParams","modelStep","inputs","t","vReset","vThresh","vIn","vMem","vMemNew","vMemReset","set","LeakyIntegrateAndFire","Model_react","b","c","d","u","uNew","Izhikevich","eNa","eK","eL","gNa","gK","gL","m","n","h","dv","vOffsetM","alphaM","exp","alphaH","vOffsetN","alphaN","dm","dh","dn","HodgkinHuxley","NeuronModels","LeakyIntegrateAndFire_react","Izhikevich_react","HodgkinHuxley_react","Torchscript","PostMap","blurb","renderer","PostRenderer","_props$info","info","PostRouter","post","has","PostRenderer_react","CardColumns","_PostMap$get","Card","Body","Title","react_router_dom","to","App","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","react_router","exact","path","component","_ref","url","match","_ref2","PostRouter_react","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_react","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f88f06c8.chunk.js","sourcesContent":["import React, { FunctionalComponent } from 'react';\nimport 'css/pages/About.scss';\n\nconst About: FunctionalComponent = () => (\n  <div className=\"emphasis all\">\n    <h1 className=\"padded bottom\">\n      Hi!{' '}\n      <span role=\"img\" aria-label=\"waving hand\">👋</span>\n    </h1>\n    <h2 className=\"padded bottom\">\n      My name is Ben.\n    </h2>\n    <h4 className=\"padded bottom contents\">\n      I'm a software engineer at Facebook, where I work on natural language\n      processing.\n    </h4>\n    <h4 className=\"padded bottom contents\">\n      I like trying to explain things in fun and informative ways. I used to fairly\n      active on{' '}\n      <a href=\"https://github.com/codekansas\">Github</a>\n      . If you're interested in connecting, shoot me an{' '}\n      <a href=\"mailto:ben@bolte.cc\">email</a>.\n    </h4>\n    <h4 className=\"padded bottom contents\">\n      Besides programming, I like playing soccer and reading books. I'm currently\n      trying to get better at{' '}\n      <a href=\"https://www.chess.com/member/codekansas\">chess</a>\n      , but it's slow going.\n    </h4>\n  </div>\n);\n\nexport default About;\n","import React, { Component } from 'react';\nimport {\n  Button, Form, InputGroup, Col,\n} from 'react-bootstrap';\nimport 'react-vis/dist/style.css';\nimport {\n  XAxis, YAxis, LineSeries, FlexibleWidthXYPlot, Crosshair,\n} from 'react-vis';\nimport LazyLoad from 'react-lazyload';\n\nexport interface Param {\n  key: string,\n  name: string,\n  unit: ?string,\n  value: number,\n  stepValue: number,\n}\n\ninterface Props {\n  params: Array<Param>,\n  defaultTargetParamKey: string,\n  model: (Map<string, number>, number) => Map<string, number>,\n}\n\ninterface State {\n  params: Array<Param>,\n  targetParamKey: string,\n}\n\ninterface RendererProps {\n  params: Array<Param>,\n  targetParamKey: string,\n  model: (Map<string, number>, number) => Map<string, number>,\n  ylabel: string,\n  dt: number,\n  totalTime: number,\n  height: number,\n}\n\ninterface RendererState {\n  nearestValue: ?any,\n}\n\nclass ModelRenderer extends Component<RendererProps, RendererState> {\n  state = {\n    nearestValue: null,\n  }\n\n  runModel(): Array<number> {\n    const {\n      params, model, dt, totalTime, targetParamKey,\n    } = this.props;\n    const steps = totalTime / dt;\n    const initialParams = new Map(params.map(\n      p => [p.key, p.value],\n    ));\n    const modelResults = [...Array(steps).keys()].reduce(\n      (r, i) => {\n        const newParams = model(r.params, dt, i * dt);\n        r.results.push({\n          x: i * dt,\n          y: newParams.get(targetParamKey),\n        });\n        return {\n          params: newParams,\n          results: r.results,\n        };\n      },\n      {\n        params: initialParams,\n        results: [],\n      },\n    );\n    const { results } = modelResults;\n    return results;\n  }\n\n  render() {\n    const {\n      params, model, height, ylabel,\n    } = this.props;\n    const data = this.runModel(params, model);\n    const { nearestValue } = this.state;\n    return (\n      <FlexibleWidthXYPlot\n        height={height}\n        onMouseLeave={() => this.setState({ nearestValue: null })}\n      >\n        <XAxis title=\"Time (ms)\" />\n        <YAxis title={ylabel} />\n        <LineSeries\n          strokeStyle=\"dashed\"\n          data={data}\n          onNearestX={v => this.setState({ nearestValue: v })}\n        />\n        {nearestValue == null\n          ? null\n          : (\n            <Crosshair\n              values={[nearestValue]}\n              titleFormat={i => ({\n                title: 'Time (ms)',\n                value: `${Math.round(i[0].x * 10000) / 10000}`,\n              })}\n              itemsFormat={i => i.map(j => ({\n                title: ylabel,\n                value: `${Math.round(j.y * 10000) / 10000}`,\n              }))}\n            />\n          )}\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nclass Model extends Component<Props, State> {\n  static defaultProps = {\n    height: 300,\n  }\n\n  constructor(props) {\n    super(props);\n    const { params, defaultTargetParamKey } = props;\n    this.state = {\n      params,\n      targetParamKey: defaultTargetParamKey,\n    };\n  }\n\n  handleSubmit = (event) => {\n    const { params } = this.props;\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    const newParams = params.map((param) => {\n      const {\n        key, name, unit, stepValue,\n      } = param;\n      const value = parseFloat(form[key].value);\n      return {\n        key, name, unit, value, stepValue,\n      };\n    });\n    const targetParamKey = form.out_var.value;\n    this.setState({\n      params: newParams,\n      targetParamKey,\n    });\n  }\n\n  renderModel(): React.Node {\n    const { model, height } = this.props;\n    const { params, targetParamKey } = this.state;\n    const { name, unit } = params.find(e => e.key === targetParamKey);\n    const ylabel = unit == null ? name : `${name} (${unit})`;\n    return (\n      <div>\n        <LazyLoad height={height}>\n          <ModelRenderer\n            params={params}\n            targetParamKey={targetParamKey}\n            model={model}\n            ylabel={ylabel}\n            dt={0.01}\n            totalTime={100}\n            height={height}\n          />\n        </LazyLoad>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            {params.map(param => (\n              <Form.Group key={param.key} controlId={param.key} as={Col} md=\"3\">\n                <Form.Label>{param.name}</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder={param.name}\n                    defaultValue={param.value}\n                    step={param.stepValue}\n                    required\n                  />\n                  {param.unit == null\n                    ? null\n                    : (\n                      <InputGroup.Append>\n                        <InputGroup.Text>{param.unit}</InputGroup.Text>\n                      </InputGroup.Append>\n                    )}\n                </InputGroup>\n              </Form.Group>\n            ))}\n            <Form.Group controlId=\"out_var\" as={Col} md=\"3\">\n              <Form.Label>Output Variable</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue={targetParamKey}\n                required\n              >\n                {params.map(param => (\n                  <option value={param.key} key={param.key}>{param.name}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group key=\"submit\" as={Col} md=\"3\">\n              <Form.Label>Update Params</Form.Label>\n              <InputGroup>\n                <Button type=\"submit\">Update</Button>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderModel();\n  }\n}\n\nexport default Model;\n","import React, { FunctionalComponent } from 'react';\nimport Model, { Param } from './Model.react';\n\nconst ModelParams: Array<Param> = [\n  {\n    key: 'v_reset',\n    name: 'Reset Voltage',\n    unit: 'mV',\n    value: -60,\n    stepValue: 1,\n  },\n  {\n    key: 'v_thresh',\n    name: 'Threshold Voltage',\n    unit: 'mV',\n    value: 15,\n    stepValue: 1,\n  },\n  {\n    key: 'v_in',\n    name: 'Input Voltage',\n    unit: 'mV',\n    value: 20,\n    stepValue: 1,\n  },\n  {\n    key: 'tau_m',\n    name: 'Time Constant',\n    unit: 'ms',\n    value: 10,\n    stepValue: 1,\n  },\n  {\n    key: 'v_mem',\n    name: 'Membrane Voltage',\n    unit: 'mV',\n    value: 0,\n    stepValue: 1,\n  },\n  {\n    key: 'start_time',\n    name: 'Stimulation Start Time',\n    unit: 'ms',\n    value: 20,\n    stepValue: 1,\n  },\n];\n\nconst modelStep = (\n  inputs: Map<string, number>,\n  dt: number,\n  t: number,\n): Map<string, number> => {\n  const vReset = inputs.get('v_reset');\n  const vThresh = inputs.get('v_thresh');\n  const vIn = t < inputs.get('start_time') ? vReset : inputs.get('v_in');\n  const vMem = inputs.get('v_mem');\n  const tauM = inputs.get('tau_m');\n\n  const dv = ((vIn - vMem) / tauM) * dt;\n  const vMemNew = vMem + dv;\n  const vMemReset = vMemNew > vThresh ? vReset : vMemNew;\n\n  inputs.set('v_mem', vMemReset);\n\n  return inputs;\n};\n\nconst LeakyIntegrateAndFire: FunctionalComponent = () => (\n  <Model\n    params={ModelParams}\n    defaultTargetParamKey=\"v_mem\"\n    model={modelStep}\n  />\n);\n\nexport default LeakyIntegrateAndFire;\n","import React, { FunctionalComponent } from 'react';\nimport Model, { Param } from './Model.react';\n\nconst ModelParams: Array<Param> = [\n  {\n    key: 'a',\n    name: 'a Variable',\n    unit: null,\n    value: 0.02,\n    stepValue: 0.001,\n  },\n  {\n    key: 'b',\n    name: 'b Variable',\n    unit: null,\n    value: 0.2,\n    stepValue: 0.01,\n  },\n  {\n    key: 'c',\n    name: 'c Variable',\n    unit: null,\n    value: -50,\n    stepValue: 1,\n  },\n  {\n    key: 'd',\n    name: 'd Variable',\n    unit: null,\n    value: 2,\n    stepValue: 0.01,\n  },\n  {\n    key: 'v_in',\n    name: 'Input Voltage',\n    unit: 'mV',\n    value: 20,\n    stepValue: 1,\n  },\n  {\n    key: 'v_thresh',\n    name: 'Threshold Voltage',\n    unit: 'mV',\n    value: 30,\n    stepValue: 1,\n  },\n  {\n    key: 'v_mem',\n    name: 'Membrane Voltage',\n    unit: 'mV',\n    value: -60,\n    stepValue: 1,\n  },\n  {\n    key: 'u',\n    name: 'u Variable',\n    unit: null,\n    value: 0.5,\n    stepValue: 0.01,\n  },\n  {\n    key: 'start_time',\n    name: 'Stimulation Start Time',\n    unit: 'ms',\n    value: 20,\n    stepValue: 1,\n  },\n];\n\nconst modelStep = (\n  inputs: Map<string, number>,\n  dt: number,\n  t: number,\n): Map<string, number> => {\n  const a = inputs.get('a');\n  const b = inputs.get('b');\n  const c = inputs.get('c');\n  const d = inputs.get('d');\n  const vThresh = inputs.get('v_thresh');\n  const vIn = t < inputs.get('start_time') ? 0 : inputs.get('v_in');\n  const vMem = inputs.get('v_mem');\n  const u = inputs.get('u');\n\n  const dv = (0.04 * vMem * vMem + 5 * vMem + 140 - u + vIn) * dt;\n  const du = (a * (b * vMem - u)) * dt;\n\n  const vMemNew = vMem + dv;\n  const uNew = u + du;\n\n  if (vMemNew >= vThresh) {\n    inputs.set('v_mem', c);\n    inputs.set('u', uNew + d);\n  } else {\n    inputs.set('v_mem', vMemNew);\n    inputs.set('u', uNew);\n  }\n\n  return inputs;\n};\n\nconst Izhikevich: FunctionalComponent = () => (\n  <Model\n    params={ModelParams}\n    defaultTargetParamKey=\"v_mem\"\n    model={modelStep}\n  />\n);\n\nexport default Izhikevich;\n","import React, { FunctionalComponent } from 'react';\nimport Model, { Param } from './Model.react';\n\nconst ModelParams: Array<Param> = [\n  {\n    key: 'e_na',\n    name: 'Sodium Reversal Potential',\n    unit: 'mV',\n    value: 50,\n    stepValue: 1,\n  },\n  {\n    key: 'e_k',\n    name: 'Potassium Reversal Potential',\n    unit: 'mV',\n    value: -77,\n    stepValue: 1,\n  },\n  {\n    key: 'e_l',\n    name: 'Leak Potential',\n    unit: 'mV',\n    value: -54,\n    stepValue: 1,\n  },\n  {\n    key: 'g_na',\n    name: 'Sodium Conductance',\n    unit: 'mS / cm * cm',\n    value: 120,\n    stepValue: 1,\n  },\n  {\n    key: 'g_k',\n    name: 'Potassium Conductance',\n    unit: 'mS / cm * cm',\n    value: 36,\n    stepValue: 1,\n  },\n  {\n    key: 'g_l',\n    name: 'Leak Conductance',\n    unit: 'mS / cm * cm',\n    value: 0.3,\n    stepValue: 0.01,\n  },\n  {\n    key: 'v_in',\n    name: 'Input Voltage',\n    unit: 'mV',\n    value: 20,\n    stepValue: 1,\n  },\n  {\n    key: 'v_mem',\n    name: 'Membrane Voltage',\n    unit: 'mV',\n    value: -65,\n    stepValue: 1,\n  },\n  {\n    key: 'm',\n    name: 'm Variable',\n    unit: null,\n    value: 0.05,\n    stepValue: 0.001,\n  },\n  {\n    key: 'h',\n    name: 'h Variable',\n    unit: null,\n    value: 0.6,\n    stepValue: 0.001,\n  },\n  {\n    key: 'n',\n    name: 'n Variable',\n    unit: null,\n    value: 0.32,\n    stepValue: 0.001,\n  },\n  {\n    key: 'start_time',\n    name: 'Stimulation Start Time',\n    unit: 'ms',\n    value: 20,\n    stepValue: 1,\n  },\n];\n\nconst modelStep = (\n  inputs: Map<string, number>,\n  dt: number,\n  t: number,\n): Map<string, number> => {\n  const eNa = inputs.get('e_na');\n  const eK = inputs.get('e_k');\n  const eL = inputs.get('e_l');\n  const gNa = inputs.get('g_na');\n  const gK = inputs.get('g_k');\n  const gL = inputs.get('g_l');\n  const vIn = t < inputs.get('start_time') ? 0 : inputs.get('v_in');\n  const vMem = inputs.get('v_mem');\n  const m = inputs.get('m');\n  const n = inputs.get('n');\n  const h = inputs.get('h');\n\n  const iNa = gNa * m * m * m * h * (vMem - eNa);\n  const iK = gK * n * n * n * n * (vMem - eK);\n  const iL = gL * (vMem - eL);\n  const dv = (vIn - iNa - iK - iL) * dt;\n\n  const vOffsetM = vMem + 40;\n  const alphaM = 0.1 * vOffsetM / (1.0 - Math.exp(-vOffsetM / 10));\n  const alphaH = 0.07 * Math.exp(-(vMem + 65) / 20);\n  const vOffsetN = vMem + 55;\n  const alphaN = 0.01 * vOffsetN / (1.0 - Math.exp(-vOffsetN / 10));\n\n  const betaM = 4.0 * Math.exp(-(vMem + 65) / 18);\n  const betaH = 1.0 / (1.0 + Math.exp(-(vMem + 35) / 10));\n  const betaN = 0.125 * Math.exp(-(vMem + 65) / 80);\n\n  const dm = (alphaM * (1.0 - m) - betaM * m) * dt;\n  const dh = (alphaH * (1.0 - h) - betaH * h) * dt;\n  const dn = (alphaN * (1.0 - n) - betaN * n) * dt;\n\n  inputs.set('m', m + dm);\n  inputs.set('h', h + dh);\n  inputs.set('n', n + dn);\n  inputs.set('v_mem', vMem + dv);\n\n  return inputs;\n};\n\nconst HodgkinHuxley: FunctionalComponent = () => (\n  <Model\n    params={ModelParams}\n    defaultTargetParamKey=\"v_mem\"\n    model={modelStep}\n  />\n);\n\nexport default HodgkinHuxley;\n","import React, { FunctionalComponent } from 'react';\nimport LeakyIntegrateAndFire from 'components/posts/neuron_models/LeakyIntegrateAndFire.react';\nimport Izhikevich from 'components/posts/neuron_models/Izhikevich.react';\nimport HodgkinHuxley from 'components/posts/neuron_models/HodgkinHuxley.react';\n\nconst NeuronModels: FunctionalComponent = () => (\n  <div>\n    <h3>\n      Leaky Integrate and Fire Model\n    </h3>\n    <div>\n      This is the simplest kind of neuron model. It consists of two parts:\n      <ol>\n        <li>\n          Slow leakage of ions across the membrane, which is represented as a resistor\n        </li>\n        <li>\n          Voltage difference across the membrane which triggers voltage-gated channels to\n          open when it reaches a certain threshold, which is represented as a capacitor\n        </li>\n      </ol>\n    </div>\n    <div className=\"emphasis top-bottom\">\n      <LeakyIntegrateAndFire />\n    </div>\n    <h3>\n      Izhikevich Model\n    </h3>\n    <div>\n      Something about this model...\n    </div>\n    <div className=\"emphasis top-bottom\">\n      <Izhikevich />\n    </div>\n    <h3>\n      Hodgkin-Huxley Model\n    </h3>\n    <div>\n      This is a much more advanced kind of model.\n    </div>\n    <div className=\"emphasis top-bottom\">\n      <HodgkinHuxley />\n    </div>\n  </div>\n);\n\nexport default NeuronModels;\n","import React, { FunctionalComponent } from 'react';\n\nconst Torchscript: FunctionalComponent = () => (\n  <div>\n    I will work on this blog post later.\n  </div>\n);\n\nexport default Torchscript;\n","import React from 'react';\n\n/* --------------\n * Post Renderers\n * -------------- */\nimport NeuronModels from 'posts/renderers/NeuronModels.react';\nimport Torchscript from 'posts/renderers/Torchscript.react';\n\nexport interface PostInfo {\n  title: string,\n  blurb: React.Node,\n  renderer: React.Node\n}\n\nconst PostMap: {\n  [string]: PostInfo\n} = new Map([\n  [\n    'torchscript', {\n      title: 'Torchscript 🔥 verses Caffe2 ☕',\n      blurb: (\n        <span>\n          Facebook is migrating a lot of our machine learning inference infrastructure\n          over to Torchscript, so I figured I should write an informational blog post\n          about the technical internals of each, as I understand them.\n        </span>\n      ),\n      renderer: Torchscript,\n    },\n  ],\n  [\n    'neuron_models', {\n      title: 'Neuron 🧠 Models',\n      blurb: (\n        <span>\n          An investigation of some different kinds of biological neuron models, from the\n          neuroscience world rather than the computer science world\n        </span>\n      ),\n      renderer: NeuronModels,\n    },\n  ],\n]);\n\nexport default PostMap;\n","import React, { FunctionalComponent } from 'react';\nimport { PostInfo } from 'posts/PostMap.react';\nimport 'css/pages/Post.scss';\n\ninterface Props {\n  info: PostInfo,\n}\n\nconst PostRenderer: FunctionalComponent<Props> = (props: Props) => {\n  const {\n    info: {\n      title, blurb, renderer,\n    },\n  } = props;\n  return (\n    <div className=\"emphasis all\">\n      <h1 className=\"padded bottom text-center title\">{title}</h1>\n      <h4 className=\"padded bottom text-center blurb\">{blurb}</h4>\n      {renderer()}\n    </div>\n  );\n};\n\nexport default PostRenderer;\n","import React, { FunctionalComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CardColumns, Card } from 'react-bootstrap';\nimport PostMap from 'posts/PostMap.react';\nimport PostRenderer from 'posts/PostRenderer.react';\n\ninterface Props {\n  post: ?string\n}\n\nconst PostRouter: FunctionalComponent<Props> = (props: Props) => {\n  const { post } = props;\n  if (post == null || !PostMap.has(post)) {\n    return (\n      <div className=\"emphasis all\">\n        <h1 className=\"padded bottom\">\n          Posts\n        </h1>\n        <CardColumns>\n          {\n            [...PostMap.keys()].map((key) => {\n              const { title, blurb } = PostMap.get(key);\n              return (\n                <Card className=\"text-center p-3\" key={key}>\n                  <Card.Body>\n                    <Card.Title><Link to={`/posts/${key}`}>{title}</Link></Card.Title>\n                    <Card.Text>{blurb}</Card.Text>\n                  </Card.Body>\n                </Card>\n              );\n            })\n          }\n        </CardColumns>\n      </div>\n    );\n  }\n  return <PostRenderer info={PostMap.get(post)} />;\n};\n\nexport default PostRouter;\n","import React, { FunctionalComponent } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport About from 'pages/About.react';\nimport PostRouter from 'posts/PostRouter.react';\n\nimport 'css/App.scss';\n\nconst App: FunctionalComponent = () => (\n  <div className=\"App\">\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link href=\"#/\">Home</Nav.Link>\n            <Nav.Link href=\"#posts\">Posts</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n    <HashRouter>\n      <Route exact path=\"/\" component={About} />\n      <Route\n        path=\"/posts\"\n        component={({\n          match: {\n            url,\n          },\n        }) => (\n          <HashRouter>\n            <Route exact path={`${url}`} component={PostRouter} />\n            <Route\n              path={`${url}/:post`}\n              component={({\n                match: {\n                  params: {\n                    post,\n                  },\n                },\n              }) => <PostRouter post={post} />}\n            />\n          </HashRouter>\n        )}\n      />\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.react';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}